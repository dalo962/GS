<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soluvis.bake.systemManager.mapper.ctiMapSkillOrgMapper">
	<select id="selectSkillOrg" parameterType="hashmap" resultType="ctiMapSkillOrg" fetchSize="1000">
		select	t1.compId,
				t2.name as compName,
				t1.chnId,
        		t1.chnName,
				t1.id,
				t1.name,
				t1.orgType,
				t1.sort,
				t1.orgLevel,
				t1.parentId,
				t1.skillDbid,
				t1.skillName,
				t1.agroupDbid,
				t1.agroupName
		from
		(
			select	decode(t1.orgLevel, 0, t1.id, t2.parent_id) as compId,
					t1.chnId,
					t1.chnName,
					t1.id,
					t1.name,
					t1.orgType,
					t1.orgLevel,
					t1.parentId,
					t1.sort,
					t1.skillDbid,
					t1.skillName,
					t1.agroupDbid,
					t1.agroupName
			from 
			(
				select	decode(t1.orgLevel, 1, t1.id, t2.id) as chnId,
						decode(t1.orgLevel, 1, t1.name, t2.name) as chnName,
						t1.id,
						t1.name,
						t1.orgType,
						t1.orgLevel,
						t1.parentId,
						t1.sort,
						t1.skillDbid,
						t1.skillName,
						t1.agroupDbid,
						t1.agroupName
				from 
				(
					select  ID as id,
					        NAME as name,
					        ORG_TYPE as orgType,
					        SORT as sort,
					        ORG_LEVEL as orgLevel,
					        parent_id as parentId,
					        skill_dbid as skillDbid,
					        skill_name as skillName,
					        agroup_dbid as agroupDbid,
					        agroup_name as agroupName
					from    ax_sk_org
					where   org_type in( '0', '11' )
					and		deleted_at is null
				)t1, ax_sk_org t2
				where	t1.parentId = t2.id(+)
				and		t2.deleted_at is null
			)t1,ax_sk_org_to_org t2
			where	t1.chnId = t2.child_id(+)
			and		t2.deleted_at is null
		)t1, ax_sk_org t2
		where	t1.compId = t2.id
		and		t2.deleted_at is null
		<if test="compId != '' and compId != null">
		and		t1.compId = #{compId}
		</if> 
		<if test="chnId != '' and chnId != null">
		and		(t1.chnid is null or t1.chnId = #{chnId})
		</if> 
		order by t1.orgLevel, t1.sort asc
    </select>
    
    <select id="selectSkill" parameterType="hashmap" resultType="ctiMapSkillOrg" fetchSize="1000">
		SELECT  compId,
		        compName,
		        chnId,
		        chnName,
		        id,
		        name,
		        skillDbid,
		        skillName,
		        agroupDbid,
		        agroupName,
		        orgLevel,
		        orgType
		FROM
		(
		<if test="orgLevel==0 and id != '' and id != null">
		    SELECT  id          AS compId,
		            name        AS compName,
		            ''          AS chnId,
		            ''          AS chnName,
		            id          AS id,
		            name        AS name,
		            skill_dbid  AS skillDbid,
		            skill_name  AS skillName,
		            agroup_dbid AS agroupDbid,
		            agroup_name AS agroupName,
		            org_level   AS orgLevel,
		            org_type    AS orgType
		    FROM ax_sk_org
		    WHERE id = #{id}
		</if>  
		<if test="orgLevel==1 and id != '' and id != null">
		    SELECT  t1.id       AS compId,
		            t1.name     AS compName,
		            t2.id       AS chnId,
		            t2.name     AS chnName,
		            t2.id        AS id,
		            t2.name        AS name,
		            t2.skill_dbid  AS skillDbid,
		            t2.skill_name  AS skillName,
		            t2.agroup_dbid AS agroupDbid,
		            t2.agroup_name AS agroupName,
		            t2.org_level   AS orgLevel,
		            t2.org_type    AS orgType
		    FROM ax_sk_org t1, ax_sk_org t2
		    WHERE t1.id = t2.parent_id
		    AND   t2.id = #{id}
		</if>  
		<if test="orgLevel==2 and id != '' and id != null">
		    SELECT  t1.id       AS compId,
		            t1.name     AS compName,
		            t2.id       AS chnId,
		            t2.name     AS chnName,
		            t3.id       AS id,
		            t3.name     AS name,
		            t3.skill_dbid  AS skillDbid,
		            t3.skill_name  AS skillName,
		            t3.agroup_dbid AS agroupDbid,
		            t3.agroup_name AS agroupName,
		            t3.org_level   AS orgLevel,
		            t3.org_type    AS orgType
		    FROM ax_sk_org t1, ax_sk_org t2, ax_sk_org t3
		    WHERE t1.id = t2.parent_id
		    AND   t2.id = t3.parent_id
		    AND   t3.id = #{id}
		</if>  
		)
		order by compId, chnId, id
    </select>
    
    <select id="selectSkillDetail" parameterType="hashmap" resultType="ctiMapSkillOrg" fetchSize="1000">
    
		select	t2.parent_id as compId,
				t3.name as compName,
				t1.chnId,
				t1.chnName,
				t1.id,
				t1.name,
				t1.parentId,
				t1.orgType,
				t1.orgLevel,
				t1.sort,
				t1.skillDbid,
				t1.skillName,
				t1.agroupDbid,
				t1.agroupName
		from 
		(
			select	t2.parent_id as chnId,
					t3.name as chnName,
					t1.id, 
					t1.name,
					t1.parent_id as parentId,
					t1.org_type as orgType,
					t1.org_level as orgLevel,
					t1.sort,
					t1.SKILL_DBID as skillDbid,
					t1.SKILL_NAME as skillName,
					t1.AGROUP_DBID as agroupDbid,
					t1.AGROUP_NAME as agroupName
			from	ax_sk_org t1, ax_sk_org_to_org t2, ax_sk_org t3
			where	t1.id = t2.child_id
			and   	t2.parent_id = t3.id
			and   	t1.org_level = '2'
			and		t1.org_type = '11'
			and		t1.deleted_at is null
			and		t2.deleted_at is null
			and		t3.deleted_at is null
		) t1, ax_sk_org_to_org t2, ax_sk_org t3
		where	t1.chnId = t2.child_id
		and		t2.parent_id = t3.id
		and		t2.deleted_at is null
		and		t3.deleted_at is null
		<if test="compId != '' and compId != null">
		and		t2.parent_id = #{compId}
		</if> 
		<if test="chnId != '' and chnId != null">
		and		t1.chnId = #{chnId}
		</if> 
		<if test="orgLevel==2 and id != '' and id != null">
		<!-- <if test="id != '' and id != null"> -->
		and		t1.id = #{id}
		</if>  
		<if test="skillName != '' and skillName != null">
		and		t1.skillName like '%'||#{skillName}||'%'
		</if>
		and		t1.orgType = '11'
		order by t1.orgLevel, t1.sort asc
    
    </select>
    
    <select  id="newOrgId" resultType="String" fetchSize="1000">
    	<!-- select max(to_number(id))+1 as id from ax_sk_org -->
    	select SEQ_ax_sk_org.nextval from dual
    </select>
    
    <insert  id="insertSkillOrg" parameterType="ctiMapSkillOrg">
   		insert into ax_sk_org (id, name, parent_id, org_level, sort, org_type, created_at, created_by, updated_at, updated_by)
    	values(#{id}, #{name}, #{parentId, jdbcType=INTEGER}, #{orgLevel}, #{sort}, #{orgType}, sysdate, #{userCd}, sysdate, #{userCd})
    </insert>
    
    <insert  id="insertSkillOrgToOrg" parameterType="ctiMapSkillOrg">
    	insert into ax_sk_org_to_org (parent_id, child_id, created_at, created_by, updated_at, updated_by )
    	values(#{parentId}, #{id}, sysdate, #{userCd}, sysdate, #{userCd})
    </insert>
    
    <update  id="updateSkillOrg" parameterType="ctiMapSkillOrg">
    	update	ax_sk_org 
    	set 	name		= #{name},
				parent_id	= #{parentId, jdbcType=INTEGER},
    			org_level	= #{orgLevel},
    			sort 		= #{sort},
    			updated_at	= sysdate,
    			updated_by	= #{userCd}
    	where	id			= #{id}
    	<!-- and		parent_id	= #{preParentId} -->
    	and		org_type	= #{orgType}
    </update>
    
    <update  id="updateSkillOrgToOrg" parameterType="ctiMapSkillOrg">
    	update	ax_sk_org_to_org
		set		parent_id	= #{parentId, jdbcType=INTEGER},
				child_id	= #{id},
				updated_at	= sysdate,
				updated_by	= #{userCd}
    	where	child_id	= #{id}
    	and		parent_id	= #{preParentId, jdbcType=INTEGER}
    </update>
    
    <update  id="deleteSkillOrg" parameterType="ctiMapSkillOrg">
    	update	ax_sk_org
    	set		deleted_at	= sysdate,
    			deleted_by	= #{userCd}
    	where	id			= #{id}
    	<!-- and		parent_id	= #{parentId} -->
    	and		org_type	= #{orgType}
    </update>
    
    <update  id="deleteSkillOrgToOrg" parameterType="ctiMapSkillOrg">
    	update	ax_sk_org_to_org
    	set		deleted_at	= sysdate,
    			deleted_by	= #{userCd}
    	where	child_id	= #{id, jdbcType=INTEGER}
    	and		parent_id	= #{preParentId, jdbcType=INTEGER}
    </update>
    
    <update  id="deleteSkillGrp" parameterType="ctiMapSkillOrg">
    	delete from	ax_sk_skg_struct
    	where  skill_id	= #{id, jdbcType=INTEGER}
    </update>
    
    <update  id="updateSkillDetail" parameterType="ctiMapSkillOrg">
    	update	ax_sk_org
		set		skill_dbid	= #{skillDbid, jdbcType=INTEGER},
				skill_name	= #{skillName, jdbcType=VARCHAR},
				agroup_dbid = #{agroupDbid, jdbcType=INTEGER},
				agroup_name	= #{agroupName, jdbcType=VARCHAR},
				updated_at	= sysdate,
				updated_by	= #{userCd}
    	where	id			= #{id, jdbcType=INTEGER}
    	and		org_type	= #{orgType}
		<!-- and		parent_id	= #{parentId} -->
    </update>
    
    <insert id="insertGrpHist" parameterType="ctiMapSkillOrg">
    	insert into ax_sk_grp_hist (dbid, row_date, menu_gubun, work_gubun, work_info, work_user_name, work_user_no )
    	values(SEQ_ax_sk_grp_hist.nextval, sysdate, #{menuGb}, #{workGb}, #{workInfo}, #{workNm}, #{compId, jdbcType=INTEGER})
    </insert>

</mapper>